{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","setFilter","filter","query","setQuery","applyQuery","value","onChange","target","placeholder","style","pointerEvents","Loader","TodoModal","useState","selectedUser","setSelectedUser","isSelected","setIsSelected","useEffect","loadUsers","a","userId","loadedUsers","href","email","name","App","setTodos","appliedQuery","setAppliedQuery","loadTodos","loadedTodos","useCallback","f","timerId","clearTimeout","args","window","debounce","clearQuery","toLowerCase","trim","visibleTodos","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kPAcA,SAASA,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,I,OCfMC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,WAAuB,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,GACjC,4BACA,GAJN,UAOE,oBAAIH,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWE,EAAKE,UACf,mBACA,kBAFJ,SAIGF,EAAKG,UAGV,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,WACPR,EAAgBG,IALpB,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,WACW,OAAZF,QAAY,IAAZA,OAAA,EAAAA,EAAcK,MAAOD,EAAKC,GACtB,mBACA,uBA/BPD,EAAKC,aC5BTK,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,UACAC,EAFyC,EAEzCA,OACAC,EAHyC,EAGzCA,MACAC,EAJyC,EAIzCA,SACAC,EALyC,EAKzCA,WALyC,OAOzC,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOJ,EACPK,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAUO,EAAOF,QAH7C,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACViB,YAAY,YACZH,MAAOH,EACPI,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXJ,EAASI,EAAOF,OAChBD,EAAWG,EAAOF,UAGtB,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLN,UAAU,SACVO,QAAS,WACPK,EAAS,IACTC,EAAW,gBCpDZO,G,MAAmB,kBAC9B,qBAAKpB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCMNqB,EAA6B,SAAC,GAGpC,IAFLvB,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,EAAwCuB,mBAAsB,MAA9D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,+EJOEC,EILkBhC,EAAagC,OJKZ7C,EAAG,iBAAiB6C,IIPzC,OAERC,EAFQ,OAIdP,EAAgBO,GAJF,gDAMdP,EAAgB,MANF,yBAQdE,GAAc,GARA,+CJOC,IAACI,IIPF,0BAAH,qDAYfF,MACC,IAGD,sBAAK5B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdyB,EACC,cAAC,EAAD,IAEA,sBAAKzB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaK,MAIzB,wBACEG,KAAK,SACLN,UAAU,SACV,UAAQ,cACRO,QAASR,OAIb,sBAAKC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaO,QAGhB,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UAEGF,EAAaM,UAEV,wBAAQJ,UAAU,kBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGH,OAED,mBAAGgC,KAAI,wBAAYT,QAAZ,IAAYA,OAAZ,EAAYA,EAAcU,OAAjC,gBACGV,QADH,IACGA,OADH,EACGA,EAAcW,oBCjElBC,EAAgB,WAC3B,MAA0Bb,mBAAiB,IAA3C,mBAAOzB,EAAP,KAAcuC,EAAd,KACA,EAAwCd,mBAAsB,MAA9D,mBAAOxB,EAAP,KAAqBC,EAArB,KACA,EAAoCuB,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOX,EAAP,KAAcC,EAAd,KACA,EAAwCU,mBAAS,IAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KACA,EAA4BhB,mBAAS,OAArC,mBAAOZ,EAAP,KAAeD,EAAf,KAEAkB,qBAAU,WACR,IAAMY,EAAS,uCAAG,4BAAAV,EAAA,+ELIQ5C,EAAY,UKJpB,OAERuD,EAFQ,OAIdJ,EAASI,GAJK,gDAMdJ,EAAS,IANK,yBAQdV,GAAc,GARA,4EAAH,qDAYfa,MACC,IAEH,IAAM1B,EAAa4B,sBCnCG,SAACC,EAA4BvD,GACnD,IAAIwD,EAEJ,OAAO,WAAwB,IAAD,EAC5BC,aAAaD,GADe,2BAAnBE,EAAmB,yBAAnBA,EAAmB,gBAG5BF,GAAU,EAAAG,QAAOvD,WAAP,SAAkBmD,EAAGvD,GAArB,OAA+B0D,KD8BzCE,CAAST,EAAiB,KAAM,IAG5BU,EAAaX,EAAaY,cAAcC,OAExCC,EAAetD,EAAMa,QAAO,SAACR,GACjC,OAAQQ,GACN,IAAK,MACH,OAAOR,EAAKG,MAAM4C,cACfG,SAASJ,GAEd,IAAK,SACH,OAAQ9C,EAAKE,WACRF,EAAKG,MAAM4C,cACXG,SAASJ,GAEhB,IAAK,YACH,OAAO9C,EAAKE,WACPF,EAAKG,MAAM4C,cACXG,SAASJ,GAEhB,QACE,OAAO9C,MAIb,OACE,qCACE,qBAAKF,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEW,MAAOA,EACPC,SAAUA,EACVC,WAAYA,EACZH,OAAQA,EACRD,UAAWA,MAIf,sBAAKT,UAAU,QAAf,UACGyB,GAAc,cAAC,EAAD,IAEd5B,EAAMwD,OAAS,GACd,cAAC,EAAD,CACExD,MAAOsD,EACPrD,aAAcA,EACdC,gBAAiBA,cAO5BD,GACC,cAAC,EAAD,CACEA,aAAcA,EACdC,gBAAiB,kBAAMA,EAAgB,aE7FjDuD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9bb3288b.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={selectedTodo?.id === todo.id\n              ? 'has-background-info-light'\n              : ''}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    selectedTodo?.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  filter: string,\n  setFilter: (filter: string) => void,\n  query: string,\n  setQuery: (query: string) => void,\n  applyQuery: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  filter,\n  query,\n  setQuery,\n  applyQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={({ target }) => setFilter(target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={({ target }) => {\n          setQuery(target.value);\n          applyQuery(target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setQuery('');\n              applyQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isSelected, setIsSelected] = useState(true);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const loadedUsers = await getUser(selectedTodo.userId);\n\n        setSelectedUser(loadedUsers);\n      } catch (error) {\n        setSelectedUser(null);\n      } finally {\n        setIsSelected(false);\n      }\n    };\n\n    loadUsers();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isSelected ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={setSelectedTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-danger\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { debounce } from './helpers';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isSelected, setIsSelected] = useState(true);\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      try {\n        const loadedTodos = await getTodos();\n\n        setTodos(loadedTodos);\n      } catch (error) {\n        setTodos([]);\n      } finally {\n        setIsSelected(false);\n      }\n    };\n\n    loadTodos();\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 500), [],\n  );\n\n  const clearQuery = appliedQuery.toLowerCase().trim();\n\n  const visibleTodos = todos.filter((todo) => {\n    switch (filter) {\n      case 'all':\n        return todo.title.toLowerCase()\n          .includes(clearQuery);\n\n      case 'active':\n        return !todo.completed\n          && todo.title.toLowerCase()\n            .includes(clearQuery);\n\n      case 'completed':\n        return todo.completed\n          && todo.title.toLowerCase()\n            .includes(clearQuery);\n\n      default:\n        return todo;\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                applyQuery={applyQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isSelected && <Loader />}\n\n              {todos.length > 0 && (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","export const debounce = (f: (query: string) => void, delay: number) => {\n  let timerId: number;\n\n  return (...args: string[]) => {\n    clearTimeout(timerId);\n\n    timerId = window.setTimeout(f, delay, ...args);\n  };\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}